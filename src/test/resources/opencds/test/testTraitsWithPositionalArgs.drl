package opencds.test;

import org.drools.factmodel.traits.Traitable;


global java.util.List list;

declare Person
@Traitable
@propertyReactive
    ssn : String
    pob : String
    isStudent : boolean
    hasAssistantship : boolean
end

declare trait Student
@propertyReactive
    studyingCountry : String
    hasAssistantship : boolean
end

declare trait Worker
@propertyReactive
    pob : String
    workingCountry : String
end

declare trait USCitizen
@propertyReactive
    pob : String = "US"
end

declare trait ITCitizen
@propertyReactive
    pob : String = "IT"
end

declare trait IRCitizen
@propertyReactive
    pob : String = "IR"
end

declare trait StudentWorker extends Student, Worker
@propertyReactive
    uniName : String
end

rule "init"
no-loop
when
then
    Person p = new Person("1234","IR",true,true);
    insert( p );
    System.out.println("init");
    list.add("initialized");

end

rule "check for being student"
no-loop
when
    $p : Person( $ssn : ssn, $pob : pob,  isStudent == true )
    if($pob == "IR" ) do[pobIsIR]
then
    Student st = (Student) don( $p , Student.class );
    modify( st ){
        setStudyingCountry( "US" );
    }
    System.out.println("student");
    list.add("student");
then[pobIsIR]
    don( $p , IRCitizen.class );
    System.out.println("IR citizen");
    list.add("IR citizen");
end

rule "check for being US citizen"
no-loop
when
    $s : Student( studyingCountry == "US" )
then
    don( $s , USCitizen.class );
    System.out.println("US citizen");
    list.add("US citizen");
end

rule "check for being worker"
no-loop
when
    $p : Student( hasAssistantship == true, $sc : studyingCountry )
then
    Worker wr = (Worker) don( $p , Worker.class );
    modify( wr ){
        setWorkingCountry( $sc );
    }
    System.out.println("worker");
    list.add("worker");
end

rule "position args 1"
when
    Student( $sc : studyingCountry ) @watch( studyingCountry )
    $w : Worker( $pob , $sc; )
    USCitizen( )
    IRCitizen( $pob := pob )
then
    System.out.println("::You are working in US as student worker.");
    list.add("You are working in US as student worker");
    StudentWorker sw = (StudentWorker) don( $w, StudentWorker.class );
    modify(sw){
        setUniName( "ASU" );
    }
    System.out.println("student worker " + sw);
end

rule "position args 2"
when
    Student( $sc : studyingCountry ) @watch( studyingCountry )
    $sw : StudentWorker( $pob , $sc; )
    IRCitizen( $pob := pob )
    //$sw : StudentWorker()
then
    System.out.println("::You are studying and working at ASU." );
    list.add("You are studying and working at ASU");
end
