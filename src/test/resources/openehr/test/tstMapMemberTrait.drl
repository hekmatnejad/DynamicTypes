package openehr.test;

import java.util.*;
import org.drools.factmodel.traits.Alias


declare org.drools.factmodel.MapCore  //what is this for
end


//new test for isA after doing don a map's field with a trait

declare trait Citizen
@traitable
    citizenship : String = "Unknown"
end

declare trait Student extends Citizen
@propertyReactive
   ID : String = "412314" @Alias("ID")
   GPA : Double = 3.99
end

declare Person
@traitable
    personalID : String
    isStudent : boolean
end

declare trait Worker
@propertyReactive
    //customer : Citizen
    hasBenefits : Boolean = true
end

declare trait StudentWorker extends Worker
@propertyReactive
    //currentStudent : Citizen @Alias("customer")
    tuitionWaiver : Boolean @Alias("hasBenefits")
end

rule "1"
salience 1
no-loop
when
then
    Person p = new Person("1020",true);
    Map map = new HashMap();
    map.put("isEmpty",true);
    insert(p);
    insert(map);
end

rule "2"
salience 1
no-loop
when
    $stu : Person(isStudent == true)
    $map : Map(this["isEmpty"] == true)
then
    Student s = don( $stu , Student.class );
    $map.put("worker" , s);
    $map.put("isEmpty" , false);
    $map.put("hasBenefits",null);
    update($map);
    System.out.println("don: Person -> Student ");
end

rule "3"
salience 1
no-loop
when
    $map : Map($stu : this["worker"])
    Map($stu isA Student.class, this == $map)
then
    Object obj = don( $map , Worker.class );
    System.out.println("don: Map -> Worker : "+obj);
end

rule "4"
salience 1
no-loop
when
    $stu : Student()
then
    Object obj = don( $stu , StudentWorker.class );
    System.out.println("don: Map -> StudentWorker : "+obj);
end

rule "5"
salience 1
no-loop
when
    StudentWorker(tuitionWaiver == true)
then
    System.out.println("tuitionWaiver == true");
end

/*
rule "6"
salience -1
no-loop
when
then
    System.out.println("");
end
*/